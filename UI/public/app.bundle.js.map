{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://Group1_Project/./JSX/App.jsx","webpack://Group1_Project/./JSX/app.jsx","webpack://Group1_Project/./JSX/src/EmployeeCreate.jsx","webpack://Group1_Project/./JSX/src/EmployeeTable.jsx","webpack://Group1_Project/./JSX/src/EmployeeUpdate.jsx","webpack://Group1_Project/./JSX/src/UpcomingRetirementTable.jsx","webpack://Group1_Project/webpack/bootstrap","webpack://Group1_Project/webpack/runtime/chunk loaded","webpack://Group1_Project/webpack/runtime/compat get default export","webpack://Group1_Project/webpack/runtime/create fake namespace object","webpack://Group1_Project/webpack/runtime/define property getters","webpack://Group1_Project/webpack/runtime/hasOwnProperty shorthand","webpack://Group1_Project/webpack/runtime/make namespace object","webpack://Group1_Project/webpack/runtime/node module decorator","webpack://Group1_Project/webpack/runtime/jsonp chunk loading","webpack://Group1_Project/webpack/runtime/nonce","webpack://Group1_Project/webpack/before-startup","webpack://Group1_Project/webpack/startup","webpack://Group1_Project/webpack/after-startup"],"sourcesContent":["//this class will create a component to enter employee details with some predefine values\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route,Routes, Link } from 'react-router-dom';\r\nimport ReactDOM from \"react-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport EmployeeCreate from './src/EmployeeCreate';\r\nimport EmployeeTable from './src/EmployeeTable';\r\nimport EmployeeUpdate from './src/EmployeeUpdate';\r\nimport UpcomingRetirementTable from './src/UpcomingRetirementTable';\r\n\r\n// this function will send an graphql request\r\nexport function graphqlRequest(queryString, variableValue = {}) {\r\n  return fetch(\"http://localhost:4000/graphql\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ query: queryString, variables: variableValue }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((dbData) => {\r\n      if (dbData.validateField) {\r\n        handleGraphQLFormError(dbData.validateField);\r\n      }\r\n      return dbData.data;\r\n    })\r\n    .catch((e) => {\r\n      alert(`Error in processing request: ${e.message}`);\r\n    });\r\n}\r\n// this will show erro if there is any\r\nfunction handleGraphQLFormError(validateField) {\r\n  const error = validateField[0];\r\n  if (error.extensions.code === \"BAD_USER_INPUT\") {\r\n    const details = error.extensions.validateField.join(\"\\n \");\r\n    alert(`${error.message}:\\n ${details}`);\r\n  } else {\r\n    alert(`${error.extensions.code}: ${error.message}`);\r\n  }\r\n}\r\n\r\n// this class component contains all other components\r\nclass EmployeeDirectory extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {employeeData: [], \r\n      updatedEmployeeData: [],\r\n      isEditing: false, // New state to track whether editing mode is active\r\n      selectedEmployee: null,};\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.addEmployeeData = this.addEmployeeData.bind(this);\r\n    this.addEmployee = this.addEmployee.bind(this);\r\n    this.updateEmployeeData = this.updateEmployeeData.bind(this);\r\n    this.updateEmployee = this.updateEmployee.bind(this);\r\n    this.updateEmployeeInfo = this.updateEmployeeInfo.bind(this);\r\n    this.toggleEdit = this.toggleEdit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const getQuery = `query getEmployeeInfo {\r\n      getEmployeeInfo {\r\n        _id\r\n        age\r\n        currentStatus\r\n        dateOfJoining\r\n        department\r\n        employeeType\r\n        firstName\r\n        lastName\r\n        title\r\n      }\r\n    }`;\r\n    graphqlRequest(getQuery).then((response) => {\r\n      this.setState({\r\n        employeeData: response.getEmployeeInfo,\r\n      });\r\n    });\r\n  }\r\n\r\n  // this function is called when user has filled all the data in EmployeeCreat form\r\n  // then it will use graphql query to store that data in mondodb cluster\r\n\r\n  addEmployeeData(employee) {\r\n    const empInfo = { ...employee };\r\n    empInfo.dateOfJoining = new Date(empInfo.dateOfJoining).toISOString();\r\n    delete empInfo.validateField;\r\n\r\n    const updateQuery = `\r\n        mutation insertData($result: inputTypeEmp)\r\n        {\r\n         insertData(result: $result)\r\n          {\r\n           _id  \r\n           currentStatus\r\n           age\r\n           department\r\n           dateOfJoining\r\n           employeeType\r\n           firstName\r\n           lastName\r\n           title\r\n         }\r\n       }`;\r\n    this.addEmployee(updateQuery, empInfo).then((resultAdded) => {\r\n      this.setState({\r\n        employeeData: [\r\n          ...this.state.employeeData,\r\n          { ...resultAdded.insertData },\r\n        ],\r\n      });\r\n      alert(`Data Added Successfully.`);\r\n    });\r\n  }\r\n\r\n  // this function will be called when user presses the update employee button in EmployeeUpdate Component after filling all feilds \r\n  updateEmployeeData(empdata) {\r\n    const empInfo = { ...empdata };\r\n    console.log(empdata);\r\n    delete empdata.validateField;\r\n    const query = `\r\n    mutation updateDataIntoMongoDB($result: inputUpdatedTypeEmp!) {\r\n      updateDataIntoMongoDB(result: $result) {\r\n        _id\r\n        lastName\r\n        firstName\r\n        age\r\n        dateOfJoining\r\n        title\r\n        department\r\n        employeeType\r\n        currentStatus\r\n      }\r\n    }`;\r\n\r\n    this.updateEmployee(query, empInfo).then((resultAdded) => {\r\n      this.setState({\r\n        employeeData: [\r\n          ...this.state.employeeData,\r\n          { ...resultAdded.insertData },\r\n        ],\r\n      });\r\n      alert(`Data Updated Successfully.`);\r\n    });\r\n}\r\n\r\n\r\n  addEmployee(query, result) {\r\n    return graphqlRequest(query, { result });\r\n  }\r\n\r\n  updateEmployee(query, result) {\r\n    return graphqlRequest(query, { result });\r\n  }\r\n  \r\n  updateEmployeeInfo(updatedData) {\r\n    this.setState({ employeeData: updatedData });\r\n}\r\n\r\ntoggleEdit(employee) {\r\n  // this will selete the data of employee which is choosen for the updation\r\n  this.setState(() => ({\r\n    selectedEmployee: employee\r\n  }));\r\n}\r\n\r\n  render() {\r\n\r\n    const { employeeData, isEditing, selectedEmployee } = this.state;\r\n    \r\n    return (\r\n      <Router>\r\n        <div>\r\n\r\n          {/* this is the navbar created with help of bootstrap to make it look good */}\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <div className=\"container\">\r\n              <Link className=\"navbar-brand font-weight-bold\" to=\"/create\">Create Employee</Link>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link font-weight-bold\" to=\"/\">Employee Table</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link font-weight-bold\" to=\"/retiringEmployeeTable\">Upcoming Retirements</Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n\r\n          {/* this are the routes for the nav bar, whenever someone clicks on the Link which contains any of this route's path, \r\n          it will redirect it to appropriate component */}\r\n          <hr />\r\n          <Routes>\r\n            {/* this route is for EmployeeCreate component */}\r\n          <Route\r\n            exact\r\n            path=\"/create\"\r\n            element={\r\n              <EmployeeCreate\r\n              insertEmp={this.addEmployeeData}\r\n              />\r\n            }\r\n          />\r\n          {/* this route is for EmployeeTable component */}\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <EmployeeTable\r\n              EmployeeInfo={this.state.employeeData}\r\n              updateEmployeeInfo={this.updateEmployeeInfo}\r\n              toggleEdit={this.toggleEdit}\r\n              />\r\n            }\r\n          />\r\n          {/* this route is for the UpcomingRetirementTable component */}\r\n          <Route\r\n            path=\"/retiringEmployeeTable\"\r\n            element={\r\n              <UpcomingRetirementTable\r\n              EmployeeInfo={this.state.employeeData}\r\n              updateEmployeeInfo={this.updateEmployeeInfo}\r\n              toggleEdit={this.toggleEdit}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* this route is for the EmployeeUpdate component */}\r\n          <Route\r\n            path=\"/update\"\r\n            element={\r\n              <EmployeeUpdate\r\n                \r\n                // updateEmployeeInfo={this.updateEmployeeInfo}\r\n                // isEditing={isEditing}\r\n                selectedEmployee={selectedEmployee}\r\n                // toggleEdit={this.toggleEdit}\r\n                updateCurrentEmployee={this.updateEmployeeData}\r\n                employee={selectedEmployee}\r\n              />\r\n            }\r\n          />\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n// ReactDOM.render(<EmployeeDirectory/>, document.getElementById(\"content\"));\r\nconst root = ReactDOM.createRoot(document.getElementById('content'));\r\nroot.render(<EmployeeDirectory />);","//this class will create a component to enter employee details with some predefine values\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route,Routes, Link } from 'react-router-dom';\r\nimport ReactDOM from \"react-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport EmployeeCreate from './src/EmployeeCreate';\r\nimport EmployeeTable from './src/EmployeeTable';\r\nimport EmployeeUpdate from './src/EmployeeUpdate';\r\nimport UpcomingRetirementTable from './src/UpcomingRetirementTable';\r\n\r\n// this function will send an graphql request\r\nexport function graphqlRequest(queryString, variableValue = {}) {\r\n  return fetch(\"http://localhost:4000/graphql\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ query: queryString, variables: variableValue }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((dbData) => {\r\n      if (dbData.validateField) {\r\n        handleGraphQLFormError(dbData.validateField);\r\n      }\r\n      return dbData.data;\r\n    })\r\n    .catch((e) => {\r\n      alert(`Error in processing request: ${e.message}`);\r\n    });\r\n}\r\n// this will show erro if there is any\r\nfunction handleGraphQLFormError(validateField) {\r\n  const error = validateField[0];\r\n  if (error.extensions.code === \"BAD_USER_INPUT\") {\r\n    const details = error.extensions.validateField.join(\"\\n \");\r\n    alert(`${error.message}:\\n ${details}`);\r\n  } else {\r\n    alert(`${error.extensions.code}: ${error.message}`);\r\n  }\r\n}\r\n\r\n// this class component contains all other components\r\nclass EmployeeDirectory extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {employeeData: [], \r\n      updatedEmployeeData: [],\r\n      isEditing: false, // New state to track whether editing mode is active\r\n      selectedEmployee: null,};\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.addEmployeeData = this.addEmployeeData.bind(this);\r\n    this.addEmployee = this.addEmployee.bind(this);\r\n    this.updateEmployeeData = this.updateEmployeeData.bind(this);\r\n    this.updateEmployee = this.updateEmployee.bind(this);\r\n    this.updateEmployeeInfo = this.updateEmployeeInfo.bind(this);\r\n    this.toggleEdit = this.toggleEdit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const getQuery = `query getEmployeeInfo {\r\n      getEmployeeInfo {\r\n        _id\r\n        age\r\n        currentStatus\r\n        dateOfJoining\r\n        department\r\n        employeeType\r\n        firstName\r\n        lastName\r\n        title\r\n      }\r\n    }`;\r\n    graphqlRequest(getQuery).then((response) => {\r\n      this.setState({\r\n        employeeData: response.getEmployeeInfo,\r\n      });\r\n    });\r\n  }\r\n\r\n  // this function is called when user has filled all the data in EmployeeCreat form\r\n  // then it will use graphql query to store that data in mondodb cluster\r\n\r\n  addEmployeeData(employee) {\r\n    const empInfo = { ...employee };\r\n    empInfo.dateOfJoining = new Date(empInfo.dateOfJoining).toISOString();\r\n    delete empInfo.validateField;\r\n\r\n    const updateQuery = `\r\n        mutation insertData($result: inputTypeEmp)\r\n        {\r\n         insertData(result: $result)\r\n          {\r\n           _id  \r\n           currentStatus\r\n           age\r\n           department\r\n           dateOfJoining\r\n           employeeType\r\n           firstName\r\n           lastName\r\n           title\r\n         }\r\n       }`;\r\n    this.addEmployee(updateQuery, empInfo).then((resultAdded) => {\r\n      this.setState({\r\n        employeeData: [\r\n          ...this.state.employeeData,\r\n          { ...resultAdded.insertData },\r\n        ],\r\n      });\r\n      alert(`Data Added Successfully.`);\r\n    });\r\n  }\r\n\r\n  // this function will be called when user presses the update employee button in EmployeeUpdate Component after filling all feilds \r\n  updateEmployeeData(empdata) {\r\n    const empInfo = { ...empdata };\r\n    console.log(empdata);\r\n    delete empdata.validateField;\r\n    const query = `\r\n    mutation updateDataIntoMongoDB($result: inputUpdatedTypeEmp!) {\r\n      updateDataIntoMongoDB(result: $result) {\r\n        _id\r\n        lastName\r\n        firstName\r\n        age\r\n        dateOfJoining\r\n        title\r\n        department\r\n        employeeType\r\n        currentStatus\r\n      }\r\n    }`;\r\n\r\n    this.updateEmployee(query, empInfo).then((resultAdded) => {\r\n      this.setState({\r\n        employeeData: [\r\n          ...this.state.employeeData,\r\n          { ...resultAdded.insertData },\r\n        ],\r\n      });\r\n      alert(`Data Updated Successfully.`);\r\n    });\r\n}\r\n\r\n\r\n  addEmployee(query, result) {\r\n    return graphqlRequest(query, { result });\r\n  }\r\n\r\n  updateEmployee(query, result) {\r\n    return graphqlRequest(query, { result });\r\n  }\r\n  \r\n  updateEmployeeInfo(updatedData) {\r\n    this.setState({ employeeData: updatedData });\r\n}\r\n\r\ntoggleEdit(employee) {\r\n  // this will selete the data of employee which is choosen for the updation\r\n  this.setState(() => ({\r\n    selectedEmployee: employee\r\n  }));\r\n}\r\n\r\n  render() {\r\n\r\n    const { employeeData, isEditing, selectedEmployee } = this.state;\r\n    \r\n    return (\r\n      <Router>\r\n        <div>\r\n\r\n          {/* this is the navbar created with help of bootstrap to make it look good */}\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <div className=\"container\">\r\n              <Link className=\"navbar-brand font-weight-bold\" to=\"/create\">Create Employee</Link>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link font-weight-bold\" to=\"/\">Employee Table</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link font-weight-bold\" to=\"/retiringEmployeeTable\">Upcoming Retirements</Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n\r\n          {/* this are the routes for the nav bar, whenever someone clicks on the Link which contains any of this route's path, \r\n          it will redirect it to appropriate component */}\r\n          <hr />\r\n          <Routes>\r\n            {/* this route is for EmployeeCreate component */}\r\n          <Route\r\n            exact\r\n            path=\"/create\"\r\n            element={\r\n              <EmployeeCreate\r\n              insertEmp={this.addEmployeeData}\r\n              />\r\n            }\r\n          />\r\n          {/* this route is for EmployeeTable component */}\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <EmployeeTable\r\n              EmployeeInfo={this.state.employeeData}\r\n              updateEmployeeInfo={this.updateEmployeeInfo}\r\n              toggleEdit={this.toggleEdit}\r\n              />\r\n            }\r\n          />\r\n          {/* this route is for the UpcomingRetirementTable component */}\r\n          <Route\r\n            path=\"/retiringEmployeeTable\"\r\n            element={\r\n              <UpcomingRetirementTable\r\n              EmployeeInfo={this.state.employeeData}\r\n              updateEmployeeInfo={this.updateEmployeeInfo}\r\n              toggleEdit={this.toggleEdit}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* this route is for the EmployeeUpdate component */}\r\n          <Route\r\n            path=\"/update\"\r\n            element={\r\n              <EmployeeUpdate\r\n                \r\n                // updateEmployeeInfo={this.updateEmployeeInfo}\r\n                // isEditing={isEditing}\r\n                selectedEmployee={selectedEmployee}\r\n                // toggleEdit={this.toggleEdit}\r\n                updateCurrentEmployee={this.updateEmployeeData}\r\n                employee={selectedEmployee}\r\n              />\r\n            }\r\n          />\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n// ReactDOM.render(<EmployeeDirectory/>, document.getElementById(\"content\"));\r\nconst root = ReactDOM.createRoot(document.getElementById('content'));\r\nroot.render(<EmployeeDirectory />);","import React from 'react';\r\n\r\nexport default class EmployeeCreate extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        age: 20,\r\n        dateOfJoining: \"\",\r\n        department: \"IT\",\r\n        employeeType: \"FullTime\",\r\n        currentStatus: 1,\r\n        title: \"Employee\",\r\n      };\r\n      this.formHandler = this.formHandler.bind(this);\r\n    }\r\n\r\n    // this function will be called when user submits the form by clicking add employee button\r\n    formHandler(e) {\r\n      e.preventDefault();\r\n      const {\r\n        firstName,\r\n        lastName,\r\n        age,\r\n        dateOfJoining,\r\n        department,\r\n        employeeType,\r\n        currentStatus,\r\n        title,\r\n      } = this.state;\r\n      //this will check for null values in name, last name and date of joining\r\n      if (!firstName || !lastName || !dateOfJoining) {\r\n        alert(\"Please fill in all fields.\");\r\n        return;\r\n      }\r\n      this.props.insertEmp({\r\n        firstName,\r\n        lastName,\r\n        age,\r\n        dateOfJoining,\r\n        department,\r\n        employeeType,\r\n        title,\r\n        currentStatus,\r\n      });\r\n    }\r\n  \r\n    //this is a form, user can use this to enter details of employee data in mongodb database\r\n    render() {\r\n      return (\r\n        <div class=\"container\">\r\n        <h2>Create Employee</h2>\r\n        <form onSubmit={this.formHandler}>\r\n            <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                <label for=\"firstName\">First Name:</label>\r\n                <input type=\"text\" id=\"firstName\" class=\"form-control\" value={this.state.firstName} onChange={(e) => this.setState({ firstName: e.target.value })}/>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                <label for=\"lastName\">Last Name:</label>\r\n                <input type=\"text\" id=\"lastName\" class=\"form-control\" value={this.state.lastName} onChange={(e) => this.setState({ lastName: e.target.value })}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                <label for=\"age\">Age:</label>\r\n                <input type=\"number\" id=\"age\" class=\"form-control\" value={this.state.age} onChange={(e) => this.setState({ age: parseInt(e.target.value) })} min=\"20\" max=\"70\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                <label for=\"dateOfJoining\">Date of Joining:</label>\r\n                <input type=\"date\" id=\"dateOfJoining\" class=\"form-control\" value={this.state.dateOfJoining} onChange={(e) => this.setState({ dateOfJoining: e.target.value })}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n            <label>Title:</label>\r\n            <div>\r\n                <label><input type=\"radio\" name=\"title\" value=\"Employee\" checked={this.state.title === \"Employee\"} onChange={(e) => this.setState({ title: e.target.value })} /> Employee</label>\r\n                <label><input type=\"radio\" name=\"title\" value=\"Manager\" checked={this.state.title === \"Manager\"} onChange={(e) => this.setState({ title: e.target.value })} /> Manager</label>\r\n                <label><input type=\"radio\" name=\"title\" value=\"Director\" checked={this.state.title === \"Director\"} onChange={(e) => this.setState({ title: e.target.value })} /> Director</label>\r\n                <label><input type=\"radio\" name=\"title\" value=\"VP\" checked={this.state.title === \"VP\"} onChange={(e) => this.setState({ title: e.target.value })} /> VP</label>\r\n            </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n            <label>Department:</label>\r\n            <div>\r\n                <label><input type=\"radio\" name=\"department\" value=\"IT\" checked={this.state.department === \"IT\"} onChange={(e) => this.setState({ department: e.target.value })} /> IT</label>\r\n                <label><input type=\"radio\" name=\"department\" value=\"Marketing\" checked={this.state.department === \"Marketing\"} onChange={(e) => this.setState({ department: e.target.value })} /> Marketing</label>\r\n                <label><input type=\"radio\" name=\"department\" value=\"HR\" checked={this.state.department === \"HR\"} onChange={(e) => this.setState({ department: e.target.value })} /> HR</label>\r\n                <label><input type=\"radio\" name=\"department\" value=\"Engineering\" checked={this.state.department === \"Engineering\"} onChange={(e) => this.setState({ department: e.target.value })} /> Engineering</label>\r\n            </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n            <label>Employee Type:</label>\r\n            <div>\r\n                <label><input type=\"radio\" id=\"fullTime\" name=\"employeeType\" value=\"FullTime\" checked={this.state.employeeType === \"FullTime\"} onChange={(e) => this.setState({ employeeType: e.target.value })} /> Full Time</label>\r\n                <label><input type=\"radio\" id=\"partTime\" name=\"employeeType\" value=\"PartTime\" checked={this.state.employeeType === \"PartTime\"} onChange={(e) => this.setState({ employeeType: e.target.value })} /> Part Time</label>\r\n                <label><input type=\"radio\" id=\"contract\" name=\"employeeType\" value=\"Contract\" checked={this.state.employeeType === \"Contract\"} onChange={(e) => this.setState({ employeeType: e.target.value })} /> Contract</label>\r\n                <label><input type=\"radio\" id=\"seasonal\" name=\"employeeType\" value=\"Seasonal\" checked={this.state.employeeType === \"Seasonal\"} onChange={(e) => this.setState({ employeeType: e.target.value })} /> Seasonal</label>\r\n            </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              {/* this is the button, when user clickes this button it will call the function formHandler */}\r\n            <button class=\"btn btn-primary\" type=\"submit\">Add Employee</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n\r\n      );\r\n    }\r\n  }","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Route,Routes, Link } from 'react-router-dom';\r\nimport { graphqlRequest } from '../App';\r\n\r\nexport default class EmployeeTable extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleDelete = this.handleDelete.bind(this);\r\n      this.handleEdit = this.handleEdit.bind(this);\r\n    }\r\n\r\n    // this will the click on edit button\r\n    handleEdit(employee) {\r\n        this.props.toggleEdit(employee);\r\n    }\r\n  \r\n    // this will hanlde the click on delete button\r\n    // first it will fetch the graphql query\r\n    // then it will check if employees's current status is active or not, if it is active, it will not allow user to delete that data\r\n    handleDelete(id,currentStatus) {\r\n      const mutation = `\r\n          mutation {\r\n              deleteData(id: \"${id}\")\r\n          }\r\n      `;\r\n      if(currentStatus != 1){\r\n      graphqlRequest(mutation)\r\n          .then((data) => {\r\n              if (data.deleteData) {\r\n                  // Refresh data or perform any other actions after successful deletion\r\n                  const updatedEmployeeInfo = this.props.EmployeeInfo.filter(employee => employee._id !== id);\r\n                  // Update the state with the filtered data\r\n                  this.props.updateEmployeeInfo(updatedEmployeeInfo);\r\n                  alert(\"Employee Data Deleted successfully\");\r\n              } else {\r\n                console.log(\"deletion failed\");\r\n              }\r\n          })\r\n          .catch((error) => {\r\n              console.error('Error deleting data:', error);\r\n          });\r\n        }\r\n        else{\r\n          alert(\"CAN'T DELETE EMPLOYEE – STATUS ACTIVE\");\r\n        }\r\n  }\r\n  \r\n    render() {\r\n      const { EmployeeInfo } = this.props;\r\n      if (EmployeeInfo.length === 0) {\r\n        return <h1>There is no data to Display, Please enter Employee data</h1>;\r\n      } else {\r\n        return (\r\n        <div>\r\n          <h2>Employee Table</h2>\r\n          <div className=\"table-responsive\">\r\n          <table className=\"table table-striped\">\r\n            <thead className=\"thead-dark\">\r\n              <tr class=\"table-primary\">\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Age</th>\r\n                <th>Date of Joining</th>\r\n                <th>Title</th>\r\n                <th>Department</th>\r\n                <th>Employee Type</th>\r\n                <th>Current Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {EmployeeInfo.map((employee) => {\r\n                return (\r\n                  <tr class=\"table-success\" key={employee._id}>\r\n                    <td>{employee.firstName}</td>\r\n                    <td>{employee.lastName}</td>\r\n                    <td>{employee.age}</td>\r\n                    <td>{employee.dateOfJoining}</td>\r\n                    <td>{employee.title}</td>\r\n                    <td>{employee.department}</td>\r\n                    <td>{employee.employeeType}</td>\r\n                    <td>{employee.currentStatus}</td>\r\n                    <td>\r\n                      <Link to={`/update`}><button className=\"btn btn-primary\" onClick={() => { this.handleEdit(employee);}}>Edit</button>  </Link>          \r\n                      <button className=\"btn btn-danger mr-2\" onClick={() => this.handleDelete(employee._id, employee.currentStatus)}>Delete</button>\r\n                      </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n        </div>\r\n        );\r\n      }\r\n    }\r\n  }","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default class EmployeeUpdate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      _id: props.employee._id,\r\n      firstName: props.employee.firstName,\r\n      lastName: props.employee.lastName,\r\n      age: props.employee.age,\r\n      dateOfJoining: props.employee.dateOfJoining,\r\n      department: props.employee.department,\r\n      employeeType: props.employee.employeeType,\r\n      title: props.employee.title,\r\n      currentStatus: 1,\r\n    };\r\n    this.formHandler = this.formHandler.bind(this);\r\n  }\r\n\r\n  formHandler(e) {\r\n    e.preventDefault();\r\n    const {\r\n      _id,\r\n      firstName,\r\n      lastName,\r\n      age,\r\n      dateOfJoining,\r\n      department,\r\n      employeeType,\r\n      title,\r\n      currentStatus,\r\n    } = this.state;\r\n\r\n    // this will check for null valus in any field\r\n    if (!firstName || !lastName || !dateOfJoining) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    // this will create an object whith updated employee data, entered by user\r\n    this.props.updateCurrentEmployee({\r\n      _id,\r\n      firstName,\r\n      lastName,\r\n      age,\r\n      dateOfJoining,\r\n      department,\r\n      employeeType,\r\n      title,\r\n      currentStatus,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <h2>Edit Employee</h2>\r\n        <form onSubmit={this.formHandler}>\r\n          <input id=\"_id\" type=\"text\" value={this.state._id} hidden onChange={(e) => this.setState({ _id: e.target.value })}/>\r\n          <div class=\"form-group\">\r\n            <label for=\"firstName\">First Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              class=\"form-control\"\r\n              value={this.state.firstName}\r\n              onChange={(e) => this.setState({ firstName: e.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"lastName\">Last Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              class=\"form-control\"\r\n              value={this.state.lastName}\r\n              onChange={(e) => this.setState({ lastName: e.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"age\">Age:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"age\"\r\n              class=\"form-control\"\r\n              value={this.state.age}\r\n              onChange={(e) => this.setState({ age: parseInt(e.target.value) })}\r\n              min=\"20\"\r\n              max=\"70\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"dateOfJoining\">Date of Joining:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"dateOfJoining\"\r\n              class=\"form-control\"\r\n              value={this.state.dateOfJoining}\r\n              onChange={(e) => this.setState({ dateOfJoining: e.target.value })}\r\n              disabled\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label>Title:</label>\r\n            <div>\r\n              <label class=\"mr-3\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"title\"\r\n                  value=\"Employee\"\r\n                  checked={this.state.title === \"Employee\"}\r\n                  onChange={(e) => this.setState({ title: e.target.value })}\r\n                  class=\"mr-1\"\r\n                />{\" \"}\r\n                Employee\r\n              </label>\r\n              <label class=\"mr-3\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"title\"\r\n                  value=\"Manager\"\r\n                  checked={this.state.title === \"Manager\"}\r\n                  onChange={(e) => this.setState({ title: e.target.value })}\r\n                  class=\"mr-1\"\r\n                />{\" \"}\r\n                Manager\r\n              </label>\r\n              <label class=\"mr-3\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"title\"\r\n                  value=\"Director\"\r\n                  checked={this.state.title === \"Director\"}\r\n                  onChange={(e) => this.setState({ title: e.target.value })}\r\n                  class=\"mr-1\"\r\n                />{\" \"}\r\n                Director\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"title\"\r\n                  value=\"VP\"\r\n                  checked={this.state.title === \"VP\"}\r\n                  onChange={(e) => this.setState({ title: e.target.value })}\r\n                  class=\"mr-1\"\r\n                />{\" \"}\r\n                VP\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label>Department:</label>\r\n            <div>\r\n              <label class=\"mr-3\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"department\"\r\n                  value=\"IT\"\r\n                  checked={this.state.department === \"IT\"}\r\n                  onChange={(e) =>\r\n                    this.setState({ department: e.target.value })\r\n                  }\r\n                  class=\"mr-1\"\r\n                />{\" \"}\r\n                IT\r\n              </label>\r\n              <label class=\"mr-3\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"department\"\r\n                  value=\"Marketing\"\r\n                  checked={this.state.department === \"Marketing\"}\r\n                  onChange={(e) =>\r\n                    this.setState({ department: e.target.value })\r\n                  }\r\n                  class=\"mr-1\"\r\n                />{\" \"}\r\n                Marketing\r\n              </label>\r\n              <label class=\"mr-3\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"department\"\r\n                  value=\"HR\"\r\n                  checked={this.state.department === \"HR\"}\r\n                  onChange={(e) =>\r\n                    this.setState({ department: e.target.value })\r\n                  }\r\n                  class=\"mr-1\"\r\n                />{\" \"}\r\n                HR\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"department\"\r\n                  value=\"Engineering\"\r\n                  checked={this.state.department === \"Engineering\"}\r\n                  onChange={(e) =>\r\n                    this.setState({ department: e.target.value })\r\n                  }\r\n                  class=\"mr-1\"\r\n                />{\" \"}\r\n                Engineering\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label>Employee Type:</label>\r\n            <div>\r\n              <label class=\"mr-3\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"fullTime\"\r\n                  name=\"employeeType\"\r\n                  value=\"FullTime\"\r\n                  checked={this.state.employeeType === \"FullTime\"}\r\n                  onChange={(e) =>\r\n                    this.setState({ employeeType: e.target.value })\r\n                  }\r\n                  class=\"mr-1\"\r\n                />{\" \"}\r\n                Full Time\r\n              </label>\r\n              <label class=\"mr-3\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"partTime\"\r\n                  name=\"employeeType\"\r\n                  value=\"PartTime\"\r\n                  checked={this.state.employeeType === \"PartTime\"}\r\n                  onChange={(e) =>\r\n                    this.setState({ employeeType: e.target.value })\r\n                  }\r\n                  class=\"mr-1\"\r\n                />{\" \"}\r\n                Part Time\r\n              </label>\r\n              <label class=\"mr-3\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"contract\"\r\n                  name=\"employeeType\"\r\n                  value=\"Contract\"\r\n                  checked={this.state.employeeType === \"Contract\"}\r\n                  onChange={(e) =>\r\n                    this.setState({ employeeType: e.target.value })\r\n                  }\r\n                  class=\"mr-1\"\r\n                />{\" \"}\r\n                Contract\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"seasonal\"\r\n                  name=\"employeeType\"\r\n                  value=\"Seasonal\"\r\n                  checked={this.state.employeeType === \"Seasonal\"}\r\n                  onChange={(e) =>\r\n                    this.setState({ employeeType: e.target.value })\r\n                  }\r\n                  class=\"mr-1\"\r\n                />{\" \"}\r\n                Seasonal\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"currentStatus\">Current Status:</label>\r\n            <select\r\n              id=\"currentStatus\"\r\n              className=\"form-control\"\r\n              value={this.state.currentStatus}\r\n              onChange={(e) =>\r\n                this.setState({ currentStatus: parseInt(e.target.value) })\r\n              }\r\n            >\r\n              <option value={1}>Active</option>\r\n              <option value={0}>Retired</option>\r\n            </select>\r\n          </div>\r\n          </div>\r\n\r\n          <button type=\"submit\" class=\"btn btn-primary\">\r\n            Update Employee\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Route,Routes, Link } from 'react-router-dom';\r\n\r\n// this component will show the employees whoes retirment is comming soon\r\nexport default class UpcomingRetirementTable extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleDelete = this.handleDelete.bind(this);\r\n      this.handleEdit = this.handleEdit.bind(this);\r\n    }\r\n\r\n// this funtion will be handling the click on Edit button\r\n    handleEdit(employee) {\r\n        this.props.toggleEdit(employee);\r\n    }\r\n  \r\n    // this funtion whill fetch the grapql query and delete the data of employee on which the user has clicked\r\n    // it uses the id of employee to delete the correct employee data\r\n    // also it chekc if the employee's current status is active , then it will not let user delete the data of that employee\r\n    handleDelete(id,currentStatus) {\r\n      const mutation = `\r\n          mutation {\r\n              deleteData(id: \"${id}\")\r\n          }\r\n      `;\r\n      if(currentStatus != 1){\r\n      graphqlRequest(mutation)\r\n          .then((data) => {\r\n              if (data.deleteData) {\r\n                  // to update table after deletion\r\n                  const updatedEmployeeInfo = this.props.EmployeeInfo.filter(employee => employee._id !== id);\r\n                  // Update the state with the filtered data\r\n                //   this will be used to update table data after deletion\r\n                  this.props.updateEmployeeInfo(updatedEmployeeInfo);\r\n\r\n                //   this will show an alert if employee data is deleted successfully\r\n                  alert(\"Employee Data Deleted successfully\");\r\n              } else {\r\n                  // Handle deletion failure\r\n              }\r\n          })\r\n          .catch((error) => {\r\n              console.error('Error deleting data:', error);\r\n          });\r\n        }\r\n        else{\r\n            // this will show an alert when user trys to delete data of an active employee\r\n          alert(\"CAN'T DELETE EMPLOYEE – STATUS ACTIVE\");\r\n        }\r\n  }\r\n  \r\n    render() {\r\n        // this will get data of all the employees\r\n        const { EmployeeInfo } = this.props;\r\n\r\n        // this will fillter out the data of employees whoes age is 64 or greater, so it can be displyed in Upcoming retirement table\r\n        const retiringEmployees = EmployeeInfo.filter(employee => employee.age >= 64);\r\n\r\n        if (retiringEmployees.length === 0) {\r\n            return <h1>No upcoming retirement found.</h1>;\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h2>Upcoming Retirement Table</h2>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-striped\">\r\n                            <thead className=\"thead-dark\">\r\n                                <tr class=\"table-primary\">\r\n                                    <th>First Name</th>\r\n                                    <th>Last Name</th>\r\n                                    <th>Age</th>\r\n                                    <th>Date of Joining</th>\r\n                                    <th>Title</th>\r\n                                    <th>Department</th>\r\n                                    <th>Employee Type</th>\r\n                                    <th>Current Status</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {retiringEmployees.map((employee) => {\r\n                                    return (\r\n                                        <tr class=\"table-success\" key={employee._id}>\r\n                                            <td>{employee.firstName}</td>\r\n                                            <td>{employee.lastName}</td>\r\n                                            <td>{employee.age}</td>\r\n                                            <td>{employee.dateOfJoining}</td>\r\n                                            <td>{employee.title}</td>\r\n                                            <td>{employee.department}</td>\r\n                                            <td>{employee.employeeType}</td>\r\n                                            <td>{employee.currentStatus}</td>\r\n                                            <td>\r\n                                                {/* this buttons will allow user to delete and edit the data of employees */}\r\n                                                <Link to={`/update`}><button className=\"btn btn-primary\" onClick={() => { this.handleEdit(employee);}}>Edit</button>  </Link> \r\n                                                <button className=\"btn btn-danger mr-2\" onClick={() => this.props.handleDelete(employee._id, employee.currentStatus)}>Delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n  }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"app\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkGroup1_Project\"] = self[\"webpackChunkGroup1_Project\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendor\"], () => (__webpack_require__(\"./JSX/app.jsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["React","BrowserRouter","Router","Route","Routes","Link","ReactDOM","EmployeeCreate","EmployeeTable","EmployeeUpdate","UpcomingRetirementTable","graphqlRequest","queryString","variableValue","arguments","length","undefined","fetch","method","headers","body","JSON","stringify","query","variables","then","res","json","dbData","validateField","handleGraphQLFormError","data","catch","e","alert","concat","message","error","extensions","code","details","join","EmployeeDirectory","_React$Component","_this","_classCallCheck","_callSuper","state","employeeData","updatedEmployeeData","isEditing","selectedEmployee","componentDidMount","bind","addEmployeeData","addEmployee","updateEmployeeData","updateEmployee","updateEmployeeInfo","toggleEdit","_inherits","_createClass","key","value","_this2","getQuery","response","setState","getEmployeeInfo","employee","_this3","empInfo","_objectSpread","dateOfJoining","Date","toISOString","updateQuery","resultAdded","_toConsumableArray","insertData","empdata","_this4","console","log","result","updatedData","render","_this$state","createElement","className","to","type","id","exact","path","element","insertEmp","EmployeeInfo","updateCurrentEmployee","Component","root","createRoot","document","getElementById","props","firstName","lastName","age","department","employeeType","currentStatus","title","formHandler","preventDefault","class","onSubmit","for","onChange","target","parseInt","min","max","name","checked","default","handleDelete","handleEdit","mutation","deleteData","updatedEmployeeInfo","filter","_id","map","onClick","hidden","disabled","htmlFor","retiringEmployees"],"sourceRoot":""}